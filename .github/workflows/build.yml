name: Build Blink

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
  workflow_call:
    inputs:
      distribution:
        required: true
        type: string

env:
  zig_version: 0.14.0
  cosmocc_version: 4.0.2
  blink_version: 2a4f8adbb8b1ae102f0b17cda94e279f4a390d13
  blink_distribution: ${{ inputs.distribution || 'full' }}
  blink_mode: ${{ inputs.distribution != 'full' && inputs.distribution || '' }}

jobs:
  build_cosmo:
    name: Build Cosmopolitan ${{ inputs.distribution }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up cosmocc
        uses: bjia56/setup-cosmocc@v0.0.4
        with:
          version: ${{ env.cosmocc_version }}

      - name: Build Blink
        run: |
          git clone https://github.com/bjia56/blink.git
          cd blink
          git checkout ${{ env.blink_version }}

          for arch in x86_64 aarch64; do
            cd ${{ github.workspace }}
            cp -r blink blink-${arch}
            cd blink-${arch}

            export CC=${arch}-unknown-cosmo-cc
            ./configure MODE=${{ env.blink_mode }}
            make -j4

            # Rename for output
            cp o/${{ env.blink_mode }}/blink/blink ${{ github.workspace }}/blink-${{ env.blink_distribution }}-cosmo-${arch}
            cp o/${{ env.blink_mode }}/blink/blinkenlights ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-cosmo-${arch}
          done

          cd ${{ github.workspace }}
          cosmo_bin=$(dirname $(which cosmocc))
          for blink in blink blinkenlights; do
            apelink \
              -l ${cosmo_bin}/ape-x86_64.elf \
              -l ${cosmo_bin}/ape-aarch64.elf \
              -M ${cosmo_bin}/ape-m1.c \
              -o ${blink}-${{ env.blink_distribution }}-cosmo \
              ${{ github.workspace }}/${blink}-${{ env.blink_distribution }}-cosmo-x86_64 \
              ${{ github.workspace }}/${blink}-${{ env.blink_distribution }}-cosmo-aarch64
          done

      - name: Check Blink
        continue-on-error: true
        run: |
          cd blink-x86_64
          cp ${{ github.workspace }}/blink-${{ env.blink_distribution }}-cosmo o/${{ env.blink_mode }}/blink/blink
          cp ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-cosmo o/${{ env.blink_mode }}/blink/blinkenlights
          make check

      - name: Upload Blink
        uses: actions/upload-artifact@v4
        with:
          name: blink-${{ env.blink_distribution }}-cosmo
          path: blink-${{ env.blink_distribution }}-cosmo

      - name: Upload Blinkenlights
        uses: actions/upload-artifact@v4
        with:
          name: blinkenlights-${{ env.blink_distribution }}-cosmo
          path: blinkenlights-${{ env.blink_distribution }}-cosmo

  build_linux:
    name: Build Linux ${{ matrix.arch }} ${{ inputs.distribution }}
    runs-on: ${{ matrix.runner || 'ubuntu-latest' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86_64
          - arch: i386
            gcc_arch: i686
            zig_arch: x86
            runner: ubuntu-24.04-arm
          - arch: aarch64
          - arch: riscv64
          - arch: s390x
          - arch: powerpc64le
          - arch: loongarch64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up zig
        uses: mlugg/setup-zig@v1
        with:
          version: ${{ env.zig_version }}

      - name: Install interpreters
        if: ${{ matrix.arch != 'x86_64' }}
        run: |
          sudo apt update
          sudo apt -y install qemu-user-static

      - name: Build Blink
        run: |
          export CC="${{ github.workspace }}/zigshim/zig cc -target ${{ matrix.zig_arch || matrix.arch }}-linux-musl"

          git clone https://github.com/bjia56/blink.git
          cd blink
          git checkout ${{ env.blink_version }}
          ./configure MODE=${{ env.blink_mode }} ${{ (matrix.arch != 'x86_64' && matrix.arch != 'aarch64') && '--disable-jit' || '' }}
          make -j4

          # Rename for output
          cp o/${{ env.blink_mode }}/blink/blink ${{ github.workspace }}/blink-${{ env.blink_distribution }}-linux-${{ matrix.arch }}
          cp o/${{ env.blink_mode }}/blink/blinkenlights ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-linux-${{ matrix.arch }}

      - name: Create stripped copy
        if: ${{ matrix.arch != 'x86_64' }}
        uses: addnab/docker-run-action@v3
        with:
          image: debian:sid
          options: -v ${{ github.workspace }}:${{ github.workspace }} --workdir ${{ github.workspace }}
          shell: bash
          run: |
            set -e

            apt update
            apt -y install gcc-${{ matrix.gcc_arch || matrix.arch }}-linux-gnu

            cp ${{ github.workspace }}/blink-${{ env.blink_distribution }}-linux-${{ matrix.arch }} ${{ github.workspace }}/blink-${{ env.blink_distribution }}-linux-${{ matrix.arch }}-stripped
            cp ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-linux-${{ matrix.arch }} ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-linux-${{ matrix.arch }}-stripped
            ${{ matrix.gcc_arch || matrix.arch }}-linux-gnu-strip ${{ github.workspace }}/blink-${{ env.blink_distribution }}-linux-${{ matrix.arch }}-stripped
            ${{ matrix.gcc_arch || matrix.arch }}-linux-gnu-strip ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-linux-${{ matrix.arch }}-stripped

      - name: Create stripped copy
        if: ${{ matrix.arch == 'x86_64' }}
        run: |
          cp ${{ github.workspace }}/blink-${{ env.blink_distribution }}-linux-${{ matrix.arch }} ${{ github.workspace }}/blink-${{ env.blink_distribution }}-linux-${{ matrix.arch }}-stripped
          cp ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-linux-${{ matrix.arch }} ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-linux-${{ matrix.arch }}-stripped
          ${{ matrix.arch }}-linux-gnu-strip ${{ github.workspace }}/blink-${{ env.blink_distribution }}-linux-${{ matrix.arch }}-stripped
          ${{ matrix.arch }}-linux-gnu-strip ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-linux-${{ matrix.arch }}-stripped

      - name: Check Blink
        continue-on-error: true
        run: |
          cd blink
          make check

      - name: Upload Blink
        uses: actions/upload-artifact@v4
        with:
          name: blink-${{ env.blink_distribution }}-linux-${{ matrix.arch }}
          path: blink-${{ env.blink_distribution }}-linux-${{ matrix.arch }}*

      - name: Upload Blinkenlights
        uses: actions/upload-artifact@v4
        with:
          name: blinkenlights-${{ env.blink_distribution }}-linux-${{ matrix.arch }}
          path: blinkenlights-${{ env.blink_distribution }}-linux-${{ matrix.arch }}*

  build_cygwin:
    name: Build Cygwin ${{ matrix.arch }} ${{ inputs.distribution }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, x86]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Cygwin
        uses: cygwin/cygwin-install-action@v5
        with:
          add-to-path: false
          packages: gcc-core make
          platform: ${{ matrix.arch }}

      - name: Build Blink
        shell: C:\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
        run: |
          git clone https://github.com/bjia56/blink.git
          cd blink
          git checkout ${{ env.blink_version }}
          ./configure MODE=${{ env.blink_mode }} ${{ matrix.arch != 'x86_64' && '--disable-jit' || '' }}
          make -j4

          workspace=$(cygpath -u '${{ github.workspace }}')

          # Rename for output
          cp o/${{ env.blink_mode }}/blink/blink ${workspace}/blink-${{ env.blink_distribution }}-cygwin-${{ matrix.arch }}
          cp o/${{ env.blink_mode }}/blink/blinkenlights ${workspace}/blinkenlights-${{ env.blink_distribution }}-cygwin-${{ matrix.arch }}

          # Create stripped copy
          cp ${workspace}/blink-${{ env.blink_distribution }}-cygwin-${{ matrix.arch }} ${workspace}/blink-${{ env.blink_distribution }}-cygwin-${{ matrix.arch }}-stripped
          cp ${workspace}/blinkenlights-${{ env.blink_distribution }}-cygwin-${{ matrix.arch }} ${workspace}/blinkenlights-${{ env.blink_distribution }}-cygwin-${{ matrix.arch }}-stripped
          strip ${workspace}/blink-${{ env.blink_distribution }}-cygwin-${{ matrix.arch }}-stripped
          strip ${workspace}/blinkenlights-${{ env.blink_distribution }}-cygwin-${{ matrix.arch }}-stripped

      - name: Check Blink
        continue-on-error: true
        shell: C:\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
        run: |
          cd blink
          make check

      - name: Upload Blink
        uses: actions/upload-artifact@v4
        with:
          name: blink-${{ env.blink_distribution }}-cygwin-${{ matrix.arch }}
          path: blink-${{ env.blink_distribution }}-cygwin-${{ matrix.arch }}*

      - name: Upload Blinkenlights
        uses: actions/upload-artifact@v4
        with:
          name: blinkenlights-${{ env.blink_distribution }}-cygwin-${{ matrix.arch }}
          path: blinkenlights-${{ env.blink_distribution }}-cygwin-${{ matrix.arch }}*

  build_openbsd:
    name: Build OpenBSD ${{ matrix.os_version }} ${{ matrix.arch }} ${{ inputs.distribution }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, aarch64]
        os_version: ["7.6", "7.7"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start VM
        uses: vmactions/openbsd-vm@v1
        with:
          sync: nfs
          arch: ${{ matrix.arch }}
          release: ${{ matrix.os_version }}
          prepare: |
            pkg_add git gmake

      - name: Build Blink
        shell: openbsd {0}
        run: |
          git clone https://github.com/bjia56/blink.git
          cd blink
          git checkout ${{ env.blink_version }}
          ./configure MODE=${{ env.blink_mode }} --disable-jit
          gmake -j4

          # Rename for output
          cp o/${{ env.blink_mode }}/blink/blink ${{ github.workspace }}/blink-${{ env.blink_distribution }}-openbsd${{ matrix.os_version }}-${{ matrix.arch }}
          cp o/${{ env.blink_mode }}/blink/blinkenlights ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-openbsd${{ matrix.os_version }}-${{ matrix.arch }}

          # Create stripped copy
          cp ${{ github.workspace }}/blink-${{ env.blink_distribution }}-openbsd${{ matrix.os_version }}-${{ matrix.arch }} ${{ github.workspace }}/blink-${{ env.blink_distribution }}-openbsd${{ matrix.os_version }}-${{ matrix.arch }}-stripped
          cp ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-openbsd${{ matrix.os_version }}-${{ matrix.arch }} ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-openbsd${{ matrix.os_version }}-${{ matrix.arch }}-stripped
          strip ${{ github.workspace }}/blink-${{ env.blink_distribution }}-openbsd${{ matrix.os_version }}-${{ matrix.arch }}-stripped
          strip ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-openbsd${{ matrix.os_version }}-${{ matrix.arch }}-stripped

      - name: Check Blink
        continue-on-error: true
        shell: openbsd {0}
        run: |
          cd blink
          gmake check

      - name: Upload Blink
        uses: actions/upload-artifact@v4
        with:
          name: blink-${{ env.blink_distribution }}-openbsd${{ matrix.os_version }}-${{ matrix.arch }}
          path: blink-${{ env.blink_distribution }}-openbsd${{ matrix.os_version }}-${{ matrix.arch }}*

      - name: Upload Blinkenlights
        uses: actions/upload-artifact@v4
        with:
          name: blinkenlights-${{ env.blink_distribution }}-openbsd${{ matrix.os_version }}-${{ matrix.arch }}
          path: blinkenlights-${{ env.blink_distribution }}-openbsd${{ matrix.os_version }}-${{ matrix.arch }}*

  build_netbsd:
    name: Build NetBSD ${{ matrix.os_version }} ${{ matrix.arch }} ${{ inputs.distribution }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, aarch64]
        os_version: ["10.0", "10.1"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start VM
        uses: vmactions/netbsd-vm@v1
        with:
          sync: nfs
          arch: ${{ matrix.arch }}
          release: ${{ matrix.os_version }}
          prepare: |
            /usr/sbin/pkg_add git gmake

      - name: Build Blink
        shell: netbsd {0}
        run: |
          git clone https://github.com/bjia56/blink.git
          cd blink
          git checkout ${{ env.blink_version }}
          bash ./configure MODE=${{ env.blink_mode }}
          gmake -j4

          # Relax PaX restrictions for JIT
          /usr/sbin/paxctl +m o/${{ env.blink_mode }}/blink/blink
          /usr/sbin/paxctl +m o/${{ env.blink_mode }}/blink/blinkenlights

          # Rename for output
          cp o/${{ env.blink_mode }}/blink/blink ${{ github.workspace }}/blink-${{ env.blink_distribution }}-netbsd${{ matrix.os_version }}-${{ matrix.arch }}
          cp o/${{ env.blink_mode }}/blink/blinkenlights ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-netbsd${{ matrix.os_version }}-${{ matrix.arch }}

          # Create stripped copy
          cp ${{ github.workspace }}/blink-${{ env.blink_distribution }}-netbsd${{ matrix.os_version }}-${{ matrix.arch }} ${{ github.workspace }}/blink-${{ env.blink_distribution }}-netbsd${{ matrix.os_version }}-${{ matrix.arch }}-stripped
          cp ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-netbsd${{ matrix.os_version }}-${{ matrix.arch }} ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-netbsd${{ matrix.os_version }}-${{ matrix.arch }}-stripped
          strip ${{ github.workspace }}/blink-${{ env.blink_distribution }}-netbsd${{ matrix.os_version }}-${{ matrix.arch }}-stripped
          strip ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-netbsd${{ matrix.os_version }}-${{ matrix.arch }}-stripped

      - name: Check Blink
        continue-on-error: true
        shell: netbsd {0}
        run: |
          cd blink
          gmake check

      - name: Upload Blink
        uses: actions/upload-artifact@v4
        with:
          name: blink-${{ env.blink_distribution }}-netbsd${{ matrix.os_version }}-${{ matrix.arch }}
          path: blink-${{ env.blink_distribution }}-netbsd${{ matrix.os_version }}-${{ matrix.arch }}*

      - name: Upload Blinkenlights
        uses: actions/upload-artifact@v4
        with:
          name: blinkenlights-${{ env.blink_distribution }}-netbsd${{ matrix.os_version }}-${{ matrix.arch }}
          path: blinkenlights-${{ env.blink_distribution }}-netbsd${{ matrix.os_version }}-${{ matrix.arch }}*

  build_freebsd:
    name: Build FreeBSD ${{ matrix.os_version }} ${{ matrix.arch }} ${{ inputs.distribution }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, aarch64]
        os_version: ["14.2", "15.0"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start VM
        uses: vmactions/freebsd-vm@v1
        with:
          sync: nfs
          arch: ${{ matrix.arch }}
          release: ${{ matrix.os_version }}
          prepare: |
            pkg install -y git gmake

      - name: Build Blink
        shell: freebsd {0}
        run: |
          git clone https://github.com/bjia56/blink.git
          cd blink
          git checkout ${{ env.blink_version }}
          ./configure MODE=${{ env.blink_mode }}
          gmake -j4

          # Rename for output
          cp o/${{ env.blink_mode }}/blink/blink ${{ github.workspace }}/blink-${{ env.blink_distribution }}-freebsd${{ matrix.os_version }}-${{ matrix.arch }}
          cp o/${{ env.blink_mode }}/blink/blinkenlights ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-freebsd${{ matrix.os_version }}-${{ matrix.arch }}

          # Create stripped copy
          cp ${{ github.workspace }}/blink-${{ env.blink_distribution }}-freebsd${{ matrix.os_version }}-${{ matrix.arch }} ${{ github.workspace }}/blink-${{ env.blink_distribution }}-freebsd${{ matrix.os_version }}-${{ matrix.arch }}-stripped
          cp ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-freebsd${{ matrix.os_version }}-${{ matrix.arch }} ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-freebsd${{ matrix.os_version }}-${{ matrix.arch }}-stripped
          strip ${{ github.workspace }}/blink-${{ env.blink_distribution }}-freebsd${{ matrix.os_version }}-${{ matrix.arch }}-stripped
          strip ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-freebsd${{ matrix.os_version }}-${{ matrix.arch }}-stripped

      - name: Check Blink
        continue-on-error: true
        shell: freebsd {0}
        run: |
          cd blink
          gmake check

      - name: Upload Blink
        uses: actions/upload-artifact@v4
        with:
          name: blink-${{ env.blink_distribution }}-freebsd${{ matrix.os_version }}-${{ matrix.arch }}
          path: blink-${{ env.blink_distribution }}-freebsd${{ matrix.os_version }}-${{ matrix.arch }}*

      - name: Upload Blinkenlights
        uses: actions/upload-artifact@v4
        with:
          name: blinkenlights-${{ env.blink_distribution }}-freebsd${{ matrix.os_version }}-${{ matrix.arch }}
          path: blinkenlights-${{ env.blink_distribution }}-freebsd${{ matrix.os_version }}-${{ matrix.arch }}*

  build_dragonflybsd:
    name: Build DragonFlyBSD ${{ matrix.os_version }} ${{ matrix.arch }} ${{ inputs.distribution }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64]
        os_version: ["6.4.0"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start VM
        uses: vmactions/dragonflybsd-vm@v1
        with:
          sync: nfs
          arch: ${{ matrix.arch }}
          release: ${{ matrix.os_version }}
          prepare: |
            pkg upgrade -y
            pkg install -y git gmake

      - name: Build Blink
        shell: dragonflybsd {0}
        run: |
          git clone https://github.com/bjia56/blink.git
          cd blink
          git checkout ${{ env.blink_version }}
          ./configure MODE=${{ env.blink_mode }}
          gmake -j4

          # Rename for output
          cp o/${{ env.blink_mode }}/blink/blink ${{ github.workspace }}/blink-${{ env.blink_distribution }}-dragonflybsd${{ matrix.os_version }}-${{ matrix.arch }}
          cp o/${{ env.blink_mode }}/blink/blinkenlights ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-dragonflybsd${{ matrix.os_version }}-${{ matrix.arch }}

          # Create stripped copy
          cp ${{ github.workspace }}/blink-${{ env.blink_distribution }}-dragonflybsd${{ matrix.os_version }}-${{ matrix.arch }} ${{ github.workspace }}/blink-${{ env.blink_distribution }}-dragonflybsd${{ matrix.os_version }}-${{ matrix.arch }}-stripped
          cp ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-dragonflybsd${{ matrix.os_version }}-${{ matrix.arch }} ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-dragonflybsd${{ matrix.os_version }}-${{ matrix.arch }}-stripped
          strip ${{ github.workspace }}/blink-${{ env.blink_distribution }}-dragonflybsd${{ matrix.os_version }}-${{ matrix.arch }}-stripped
          strip ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-dragonflybsd${{ matrix.os_version }}-${{ matrix.arch }}-stripped

      - name: Check Blink
        continue-on-error: true
        shell: dragonflybsd {0}
        run: |
          cd blink
          gmake check

      - name: Upload Blink
        uses: actions/upload-artifact@v4
        with:
          name: blink-${{ env.blink_distribution }}-dragonflybsd${{ matrix.os_version }}-${{ matrix.arch }}
          path: blink-${{ env.blink_distribution }}-dragonflybsd${{ matrix.os_version }}-${{ matrix.arch }}*

      - name: Upload Blinkenlights
        uses: actions/upload-artifact@v4
        with:
          name: blinkenlights-${{ env.blink_distribution }}-dragonflybsd${{ matrix.os_version }}-${{ matrix.arch }}
          path: blinkenlights-${{ env.blink_distribution }}-dragonflybsd${{ matrix.os_version }}-${{ matrix.arch }}*

  build_solaris:
    name: Build Solaris ${{ matrix.os_version }} ${{ matrix.arch }} ${{ inputs.distribution }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64]
        os_version: ["11.4"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start VM
        uses: vmactions/solaris-vm@v1
        with:
          sync: nfs
          arch: ${{ matrix.arch }}
          release: ${{ matrix.os_version }}
          prepare: |
            pkg install --accept git gcc

      - name: Build Blink
        shell: solaris {0}
        run: |
          git clone https://github.com/bjia56/blink.git
          cd blink
          git checkout ${{ env.blink_version }}
          CC=gcc bash ./configure MODE=${{ env.blink_mode }}
          gmake -j4

          # Rename for output
          cp o/${{ env.blink_mode }}/blink/blink ${{ github.workspace }}/blink-${{ env.blink_distribution }}-solaris${{ matrix.os_version }}-${{ matrix.arch }}
          cp o/${{ env.blink_mode }}/blink/blinkenlights ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-solaris${{ matrix.os_version }}-${{ matrix.arch }}

          # Create stripped copy
          cp ${{ github.workspace }}/blink-${{ env.blink_distribution }}-solaris${{ matrix.os_version }}-${{ matrix.arch }} ${{ github.workspace }}/blink-${{ env.blink_distribution }}-solaris${{ matrix.os_version }}-${{ matrix.arch }}-stripped
          cp ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-solaris${{ matrix.os_version }}-${{ matrix.arch }} ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-solaris${{ matrix.os_version }}-${{ matrix.arch }}-stripped
          strip ${{ github.workspace }}/blink-${{ env.blink_distribution }}-solaris${{ matrix.os_version }}-${{ matrix.arch }}-stripped
          strip ${{ github.workspace }}/blinkenlights-${{ env.blink_distribution }}-solaris${{ matrix.os_version }}-${{ matrix.arch }}-stripped

      - name: Check Blink
        continue-on-error: true
        shell: solaris {0}
        run: |
          cd blink
          gmake check

      - name: Upload Blink
        uses: actions/upload-artifact@v4
        with:
          name: blink-${{ env.blink_distribution }}-solaris${{ matrix.os_version }}-${{ matrix.arch }}
          path: blink-${{ env.blink_distribution }}-solaris${{ matrix.os_version }}-${{ matrix.arch }}*

      - name: Upload Blinkenlights
        uses: actions/upload-artifact@v4
        with:
          name: blinkenlights-${{ env.blink_distribution }}-solaris${{ matrix.os_version }}-${{ matrix.arch }}
          path: blinkenlights-${{ env.blink_distribution }}-solaris${{ matrix.os_version }}-${{ matrix.arch }}*
